{"version":3,"file":"component---src-pages-datos-facturacion-js-4351f6f0859ef1c25d0e.js","mappings":"0JAAMA,EAAS,wBASX,aAEA,CAAC,kBAHA,OAGA,EAEKC,kBAAiB,2BAAvB,WAAwBC,GAAM,IAAF,qEAoBvB,OAnBGC,EAAY,EACZC,GAAe,OAEPC,IAATH,GAA+B,KAATA,GACrBC,EAAY,EACZC,GAAe,GAEI,KAAhBF,EAAKI,QACJH,EAAY,EACZC,GAAe,IAEfD,EAAY,EACZC,GAAe,GAInBG,EAAS,CACTL,KAAMC,EACNK,QAASJ,GACZ,kBACMG,GAAM,2CAChB,mDAtBsB,GAsBtB,EAEKE,gBAAe,2BAArB,WAAsBP,GAAM,IAAF,qEAqBrB,OApBGC,EAAY,EACZC,GAAe,OACPC,IAATH,GAA+B,KAATA,GACrBC,EAAY,EACZC,GAAe,IAIF,IAFI,oCACMM,KAAKR,IAExBC,EAAY,EACZC,GAAe,IAEfD,EAAY,EACZC,GAAe,GAInBG,EAAS,CACTL,KAAMC,EACNK,QAASJ,GACZ,kBAEMG,GAAM,2CAChB,mDAxBoB,GAwBpB,EAEKI,aAAY,2BAAlB,WAAmBT,GAAM,IAAF,qEAoBlB,OAnBGC,EAAY,EACZC,GAAe,EACnBQ,QAAQC,IAAI,wBACAR,IAATH,GAA+B,KAATA,GACrBC,EAAY,EACZC,GAAe,GAEI,IAAhBF,EAAKI,QACJH,EAAY,EACZC,GAAe,IAEfD,EAAY,EACZC,GAAe,GAInBG,EAAS,CACTL,KAAMC,EACNK,QAASJ,GACZ,kBACMG,GAAM,2CAChB,mDAtBiB,GAsBjB,EAEKO,aAAY,2BAAlB,WAAmBC,EAAKC,GAAS,IAAF,uEA4C1B,OA3CGb,EAAY,EACZc,GAAkB,EAClBC,GAAsB,EAEX,eAAZF,GACCb,EAAY,EACZe,GAAsB,GACH,WAAZF,GACPE,GAAsB,EACX,KAARH,QAAsBV,IAARU,GACbH,QAAQC,IAAI,oBACZV,EAAY,EACZc,GAAkB,IAElBL,QAAQC,IAAI,4BACM,KAAfE,EAAIT,QACHH,EAAY,EACZc,GAAkB,IAElBd,EAAY,EACZc,GAAkB,KAGP,UAAZD,IACPE,GAAsB,EACX,KAARH,QAAsBV,IAARU,GACbZ,EAAY,EACZc,GAAkB,GAEA,KAAfF,EAAIT,QACHH,EAAY,EACZc,GAAkB,IAElBd,EAAY,EACZc,GAAkB,IAK1BV,EAAS,CACTL,KAAMC,EACNgB,WAAYF,EACZG,eAAgBF,GACnB,kBAEMX,GAAM,2CAEhB,qDAhDiB,GAgDjB,EAEKc,gBAAe,2BAArB,WAAsBnB,GAAM,IAAF,qEAgBrB,OAdGC,EAAY,EACZC,GAAe,EAEP,eAATF,GACCC,EAAY,EACZC,GAAe,IAEfD,EAAY,EACZC,GAAe,GAGfG,EAAS,CACTL,KAAMC,EACNK,QAASJ,GACZ,kBACMG,GAAM,2CAChB,mDAlBoB,GAkBpB,EAEKe,gBAAe,2BAArB,WAAsBpB,GAAM,IAAF,qEAerB,OAdGC,EAAY,EACZC,GAAe,EAEP,KAATF,QAAwBG,IAATH,GACdC,EAAY,EACZC,GAAe,IAEfD,EAAY,EACZC,GAAe,GAGfG,EAAQ,CACRL,KAAMC,EACNK,QAASJ,GACZ,kBACMG,GAAM,2CAChB,mDAjBoB,GAmBrB,EACMgB,2BAA0B,2BAAhC,WAAiCrB,GAAM,IAAF,iEAQhC,OAPGC,EAAY,EAIZA,EADc,KAAfD,EAAKsB,OAAiC,KAAjBtB,EAAKuB,SAAmC,KAAjBvB,EAAKwB,SAAkC,KAAhBxB,EAAKyB,QAAiC,KAAhBzB,EAAK0B,QAA8B,KAAb1B,EAAKa,KAAgC,KAAlBb,EAAK2B,UAAmC,KAAjB3B,EAAK4B,QACjJ,EAEA,EACf,kBAEM3B,GAAS,2CACnB,mDAX+B,GAW/B,EAEK4B,4BAA2B,2BAAjC,WAAkC7B,GAAM,IAAF,qFAClB,OAAZ8B,EAAW,EAAE,EAAD,OAEMC,KAAKX,gBAAgBpB,EAAK0B,QAAQ,KAAD,EAA1C,OAATM,EAAS,gBACSD,KAAKxB,gBAAgBP,EAAKyB,QAAQ,KAAD,EAA1C,OAATQ,EAAS,gBACSF,KAAKhC,kBAAkBC,EAAKuB,SAAS,KAAD,EAA7C,OAATW,EAAS,iBACKH,KAAKnB,aAAaZ,EAAKa,IAAKb,EAAKc,SAAS,KAAD,GAAlD,OAALqB,EAAK,iBACYJ,KAAKZ,gBAAgBnB,EAAKoC,QAAQ,KAAD,GAA1C,OAARC,EAAQ,iBAESN,KAAKX,gBAAgBpB,EAAKsB,OAAO,KAAD,GAAzC,OAARgB,EAAQ,iBACUP,KAAKX,gBAAgBpB,EAAKuC,QAAQ,KAAD,GAA1C,OAATC,EAAS,iBACUT,KAAKX,gBAAgBpB,EAAKwB,SAAS,KAAD,GAA3C,OAAViB,EAAU,iBACSV,KAAKX,gBAAgBpB,EAAK0C,SAAS,KAAD,GAsBvD,OAtBEC,EAAU,OAEQ,IAAnBX,EAAUhC,MAAiC,IAAnBiC,EAAUjC,MAAiC,IAAnBkC,EAAUlC,MAA6B,IAAfmC,EAAMnC,MAAgC,IAAlBsC,EAAStC,MAAiC,IAAnBwC,EAAUxC,MAAkC,IAApByC,EAAWzC,MAAkC,IAApB2C,EAAW3C,KAC9K8B,EAAW,EAEW,IAAnBG,EAAUjC,KAAa8B,EAAWG,EAAUjC,KACpB,IAAnBkC,EAAUlC,KAAc8B,EAAWI,EAAUlC,KAC9B,IAAfmC,EAAMnC,MAA6B,IAAfmC,EAAMnC,KAAc8B,EAAWK,EAAMnC,KACvC,IAAlBqC,EAASrC,OAAc8B,EAAWO,EAASrC,MAGnDC,EAAY,CACZ2C,MAAOd,EACPe,OAAQb,EACRc,OAAQb,EACRc,QAASb,EACTc,IAAKb,EACLc,OAAQZ,EACRa,MAAOZ,EACPa,OAAQX,EACRY,QAASX,EACTY,QAASV,GACZ,kBAEM1C,GAAS,iDACnB,mDArCgC,GAqChC,EAEKqD,0BAAyB,2BAA/B,WAAgCtD,GAAM,IAAF,6EAEf,OAAbuD,EAAY,EAAE,EAAD,OAEIxB,KAAKX,gBAAgBpB,EAAKwD,OAAO,KAAD,EAAzC,OAARC,EAAQ,gBACQ1B,KAAKX,gBAAgBpB,EAAK0D,MAAM,KAAD,EAAxC,OAAPC,EAAO,gBACQ5B,KAAKX,gBAAgBpB,EAAK4D,UAAU,KAAD,EAA5C,OAANC,EAAM,iBACY9B,KAAKX,gBAAgBpB,EAAK8D,QAAQ,KAAD,GAA1C,OAATC,EAAS,iBACchC,KAAKX,gBAAgBpB,EAAKgE,aAAa,KAAD,GAehE,OAfGC,EAAc,OAGdV,EADiB,IAAlBE,EAASzD,MAA+B,IAAjB2D,EAAQ3D,MAA8B,IAAhB6D,EAAO7D,MAAiC,IAAnB+D,EAAU/D,MAAsC,IAAxBiE,EAAejE,KAC5F,EAEA,EAGZK,EAAS,CACTuC,MAAOW,EACPW,MAAOT,EACPU,KAAMR,EACNS,IAAKP,EACLQ,OAAQN,EACRO,YAAaL,GAChB,kBAEM5D,GAAM,iDAEhB,mDA3B8B,GA2B9B,8BA7PD,WAIA,OAHuB,OAAnBP,EAAUyE,OACVzE,EAAUyE,KAAO,IAAIzE,GAElBA,EAAUyE,IACjB,KAAC,EARU,GAATzE,EACKyE,KAAO,KAmQlBC,EAAOC,QAAU3E,EAAU4E,Q,0PCtPZ,SAASC,IACtB,OAAwBC,EAAAA,EAAAA,WAAS,GAA1BC,EAAI,KAAEC,EAAO,KACpB,GAA0BF,EAAAA,EAAAA,WAAS,GAA5BG,EAAK,KAAEC,EAAQ,KACtB,GAA0BJ,EAAAA,EAAAA,UAAS,GAA5BhC,EAAK,KAAEqC,EAAQ,KACtB,GAAoCL,EAAAA,EAAAA,WAAS,GAAtCM,EAAU,KACjB,GADgC,MACNN,EAAAA,EAAAA,WAAS,IAArBO,GAAF,KAAU,MACtB,GAAwCP,EAAAA,EAAAA,UAAS,IAA1CQ,EAAY,KAAEC,EAAe,KAEpC,GAA8BT,EAAAA,EAAAA,UAAS,CACrCU,OAAQ,GACRC,UAAW,KAFNC,EAAO,KAAEC,EAAU,KAK1B,GAAsCb,EAAAA,EAAAA,UAAS,CAC7Cc,QAAS,CAAC,EACVC,SAAU,CAAC,IAFNC,EAAW,KAAEC,EAAc,KAKlC,GAA8CjB,EAAAA,EAAAA,UAAS,CACrDkB,QAAS,GACTC,SAAU,UACVC,KAAM,GACNC,MAAO,CACHvE,OAAQ,GACRb,IAAK,GACLY,OAAQ,GACRF,QAAS,GACTI,SAAU,GACVL,MAAO,GACPiB,OAAQ,GACRf,QAAS,GACTI,QAAS,MAbRsE,EAAe,KAAEC,EAAkB,KAiBpCC,GAAUC,EAAAA,EAAAA,UAgDhB,SAASC,EAAQtG,GAAM,IAAD,EAGhBuG,IAF2B,QAAnB,EAAGvG,EAAKwG,mBAAW,aAAhB,EAAkBC,UAAU,OAAOC,QAAQ,iBAAkB,MACpD,cACDC,cAGnBC,EADa5G,EAAK6G,UAAUJ,UAAU,OAAOC,QAAQ,iBAAkB,IAC5CC,cAE/BG,IAAAA,cAAkBP,GAAYQ,MAAK,SAACC,GAIhC,IAUIC,EAVcD,EAAQtB,QAAQwB,KAAI,SAACC,GACnC,IAAIC,EAAeD,EAAIR,cAGvB,IAFmBS,aAAY,EAAZA,EAAcX,UAAU,OAAOC,QAAQ,iBAAkB,OAExDH,EAChB,OAAOY,CAGf,IAE6BE,QAAO,SAASC,GACzC,YAAanH,IAANmH,CACX,IAaIC,EAXiBP,EAAQrB,SAASuB,KAAI,SAACC,GACvC,IAAIK,EAAWL,EAAIR,cAGnB,IAFgBa,aAAQ,EAARA,EAAUf,UAAU,OAAOC,QAAQ,iBAAkB,OAEpDE,EACb,OAAOO,CAIf,IAEmCE,QAAO,SAASC,GAC/C,YAAanH,IAANmH,CACX,IAEA7B,EAAW,OAAD,UACHD,EAAQ,CACXF,OAAQ2B,EAAa,GACrB1B,UAAWgC,EAAgB,MAG/B1B,EAAe,OAAD,UACPD,EAAY,CACfF,QAASsB,EAAQtB,QACjBC,SAAUqB,EAAQrB,WAE1B,GACF,CA+CA,OAlJA8B,EAAAA,EAAAA,YAAU,WAER,GAAsB,oBAAXC,OAAwB,CAG/B,IAAIC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,gBAS5CzB,EALmB,CACfE,YAJSmB,EAAMK,iBAAiBC,MAKhCpB,UAJYc,EAAMK,iBAAiBE,OASvC,IACIC,EADiBR,EAAMK,iBAAiBI,OAAOC,MAAM,UACnB,GAAG3B,QAAQ,SAAU,IAEvD4B,EAAUX,EAAMY,aAAaC,SAAS9B,QAAQ,KAAM,KAKxDP,EAAmB,OAAD,UACXD,EAAgB,CACnBD,MAAO,CACHvE,OAAQ4G,EACRzH,IAAK8G,EAAMY,aAAavF,IACxBvB,OAAQkG,EAAMc,gBAAgBC,MAC9BnH,QAASoG,EAAMc,gBAAgBE,OAC/BhH,SAAUgG,EAAMc,gBAAgBG,MAChCtH,MAAO6G,EACP5F,OAAQoF,EAAMK,iBAAiBa,OAC/BrH,QAASmG,EAAMK,iBAAiBc,QAChClH,QAAS+F,EAAMK,iBAAiBe,cAK5C,CAIF,GAAG,IAuGD,gBAAC,IAAM,CAACC,QAAS,mBACf,gBAAC,IAAG,CAACC,MAAM,kBACT,gBAAC,IAAS,CAACC,UAAU,qBAAqBC,QAAS,WAAOhE,GAAS,EAAK,GAEpE,gBAAC,IAAG,CAAC+D,UAAU,mBACX,uBAAKA,UAAU,kBACX,gBAAC,IAAG,KACA,gBAAC,IAAG,CAACA,UAAU,eAAc,sBAAIA,UAAU,YAAYE,MAAO,CAACC,UAAW,SAAUC,aAAc,IAAG,0BAEzG,gBAAC,IAAG,KACA,gBAAC,IAAG,CAACJ,UAAU,eAAc,qBAAGA,UAAU,aAAaE,MAAO,CAACE,aAAc,EAAGD,UAAW,IAAG,sEAElG,gBAAC,IAAG,CAACH,UAAU,eACX,sBAAIA,UAAU,YAAYE,MAAO,CAACC,UAAW,SAAUC,aAAc,WAAU,WAC/E,gBAAC,IAAS,KACN,gBAAC,IAAG,KACA,gBAAC,IAAG,CAACC,GAAI,GAAE,mBAEP,yBACIC,aAAa,MACbC,KAAK,OACLC,IAAmB,IAAfxE,EAAsB,qBAAuB,gBACjDgE,UAAU,eACVC,QAAS,WAAOrE,GAAQ,GAAOqB,EAAmB,OAAD,UAAKD,EAAgB,CAACH,SAAU,YAAY,EAC7F4D,QAAS,kBAAMxD,EAAmB,OAAD,UAAKD,EAAgB,CAACJ,QAAS,WAAU,EAC1EG,MAAOC,EAAgBD,MAAMvE,QAAU,MAG/C,gBAAC,IAAG,CAAC6H,GAAI,GAAE,OAEP,yBACIC,aAAa,MACbC,KAAK,OACLC,IAAmB,IAAfxE,EAAsB,qBAAuB,gBACjDgE,UAAU,eACVC,QAAS,WAAOrE,GAAQ,GAAOqB,EAAmB,OAAD,UAAKD,EAAgB,CAACH,SAAU,QAAQ,EACzF4D,QAAS,kBAAMxD,EAAmB,OAAD,UAAKD,EAAgB,CAACJ,QAAS,QAAO,EACvEG,MAAOC,EAAgBD,MAAMpF,KAAO,MAG5C,gBAAC,IAAG,CAAC0I,GAAI,GAAE,sBAEP,yBACIC,aAAa,MACbC,KAAK,OACLC,IAAmB,IAAfxE,EAAsB,qBAAuB,gBACjDgE,UAAU,eACVC,QAAS,WAAOrE,GAAQ,GAAOqB,EAAmB,OAAD,UAAKD,EAAgB,CAACH,SAAU,YAAY,EAC7F4D,QAAS,kBAAMxD,EAAmB,OAAD,UAAKD,EAAgB,CAACJ,QAAS,WAAU,EAC1EG,MAAOC,EAAgBD,MAAMxE,QAAU,MAG/C,gBAAC,IAAG,CAAC8H,GAAI,GAAE,WAEP,yBACIC,aAAa,MACbC,KAAK,OACLC,IAAmB,IAAfxE,EAAsB,qBAAuB,gBACjDgE,UAAU,eACVC,QAAS,WAAOrE,GAAQ,GAAOqB,EAAmB,OAAD,UAAKD,EAAgB,CAACH,SAAU,UAAU,EAC3F4D,QAAS,kBAAMxD,EAAmB,OAAD,UAAKD,EAAgB,CAACJ,QAAS,YAAW,EAC3EG,MAAOC,EAAgBD,MAAM1E,SAAW,MAGhD,gBAAC,IAAG,CAACgI,GAAI,GAAE,YAEP,yBACIC,aAAa,MACbC,KAAK,OACLC,IAAmB,IAAfxE,EAAsB,qBAAuB,gBACjDgE,UAAU,eACVC,QAAS,WAAOrE,GAAQ,GAAOqB,EAAmB,OAAD,UAAKD,EAAgB,CAACH,SAAU,UAAU,EAC3F4D,QAAS,kBAAMxD,EAAmB,OAAD,UAAKD,EAAgB,CAACJ,QAAS,aAAY,EAC5EG,MAAOC,EAAgBD,MAAMtE,UAAY,SAM7D,gBAAC,IAAG,CAACuH,UAAU,eACX,sBAAIA,UAAU,YAAYE,MAAO,CAACC,UAAW,SAAUC,aAAc,WAAU,aAC/E,gBAAC,IAAS,KACN,gBAAC,IAAG,KACA,gBAAC,IAAG,CAACC,GAAI,GAAE,SAEP,yBACIC,aAAa,MACbC,KAAK,OACLC,IAAmB,IAAfxE,EAAsB,qBAAuB,gBACjDgE,UAAU,eACVC,QAAS,WAAOrE,GAAQ,GAAOqB,EAAmB,OAAD,UAAKD,EAAgB,CAACH,SAAU,YAAY,EAC7F4D,QAAS,kBAAMxD,EAAmB,OAAD,UAAKD,EAAgB,CAACJ,QAAS,UAAS,EACzEG,MAAOC,EAAgBD,MAAM3E,OAAS,MAG9C,gBAAC,IAAG,CAACiI,GAAI,GAAE,UAEP,yBACIC,aAAa,MACbC,KAAK,OACLC,IAAmB,IAAfxE,EAAsB,qBAAuB,gBACjDgE,UAAU,eACVC,QAAS,WAAOrE,GAAQ,GAAOqB,EAAmB,OAAD,UAAKD,EAAgB,CAACH,SAAU,UAAU,EAC3F4D,QAAS,kBAAMxD,EAAmB,OAAD,UAAKD,EAAgB,CAACJ,QAAS,WAAU,EAC1EG,MAAOC,EAAgBD,MAAM1D,QAAU,MAG/C,gBAAC,IAAG,CAACgH,GAAI,GAAE,WAEP,yBACIC,aAAa,MACbC,KAAK,OACLC,IAAmB,IAAfxE,EAAsB,qBAAuB,gBACjDgE,UAAU,eACVC,QAAS,WAAOrE,GAAQ,GAAOqB,EAAmB,OAAD,UAAKD,EAAgB,CAACH,SAAU,YAAY,EAC7F4D,QAAS,kBAAMxD,EAAmB,OAAD,UAAKD,EAAgB,CAACJ,QAAS,YAAW,EAC3EG,MAAOC,EAAgBD,MAAMzE,SAAW,MAGhD,gBAAC,IAAG,CAAC+H,GAAI,GACL,uBAAKH,MAAO,CAACQ,cAAc,KAAI,YAC/B,gBAAC,WAAW,CACR,aAAW,yBACXF,GAAG,gBACHR,UAAU,eACVW,SAAU,SAACC,GAMPxD,EALmB,CACfE,YAAasD,EAAEC,OAAO9D,MACtBY,UAAW,IAInB,EACAZ,MAAOT,EAAQF,QAEf,0BAAQW,MAAM,cAAY,eACzBL,GAAeA,EAAYF,SAAWE,EAAYF,QAAQtF,OAAS,EAChEwF,EAAYF,QAAQwB,KAAI,SAACC,EAAK6C,GAE1B,OACI,gCACI,0BAAQ/D,MAAOkB,GAAMA,GAGjC,IACA,OAIZ,gBAAC,IAAG,CAACoC,GAAI,GACL,uBAAKH,MAAO,CAACQ,cAAc,KAAI,eAC/B,gBAAC,WAAW,CACR,aAAW,yBACXF,GAAG,gBACHR,UAAU,eACVW,SAAU,SAACC,GACPrE,EAAW,OAAD,UACHD,EAAQ,CACXD,UAAWuE,EAAEC,OAAO9D,QAE5B,EACAA,MAAOT,EAAQD,WAEf,0BAAQU,MAAM,cAAY,eACzBL,GAAeA,EAAYD,UAAYC,EAAYD,SAASvF,OAAS,EAClEwF,EAAYD,SAASuB,KAAI,SAACC,EAAK6C,GAE3B,OACI,gCACI,0BAAQ/D,MAAOkB,GAAMA,GAGjC,IACA,OAIZ,gBAAC,IAAG,CAACoC,GAAI,GAAE,iBAEP,yBACIC,aAAa,MACbC,KAAK,OACLC,IAAmB,IAAfxE,EAAsB,qBAAuB,gBACjDgE,UAAU,eACVC,QAAS,WAAOrE,GAAQ,GAAOqB,EAAmB,OAAD,UAAKD,EAAgB,CAACH,SAAU,UAAU,EAC3F4D,QAAS,kBAAMxD,EAAmB,OAAD,UAAKD,EAAgB,CAACJ,QAAS,YAAW,EAC3EG,MAAOC,EAAgBD,MAAMrE,SAAW,SAO5D,gBAAC,IAAG,CAACsH,UAAU,mBACX,gBAAC,IAAM,CAACC,QAAS,WAhPvC,IAEM9I,IAAS,CACTqB,OAAQwE,EAAgBD,MAAMvE,OAC9Bb,IAAKqF,EAAgBD,MAAMpF,IAC3BY,OAAQyE,EAAgBD,MAAMxE,OAC9BF,QAAS2E,EAAgBD,MAAM1E,QAC/BI,SAAUuE,EAAgBD,MAAMtE,SAChCL,MAAO4E,EAAgBD,MAAM3E,MAC7BiB,OAAQ2D,EAAgBD,MAAM1D,OAC9Bf,QAAS0E,EAAgBD,MAAMzE,QAC/BI,QAASsE,EAAgBD,MAAMrE,QAC/BqI,OAAQzE,EAAQF,OAChB4E,UAAW1E,EAAQD,WAGvB4E,IAAAA,2BAA+B9J,GAAQ0G,MAAK,SAACqD,GAE7B,IAATA,EACCtD,IAAAA,eAAmBzG,GAClB0G,MAAK,SAACsD,GACHrF,GAAS,GACTC,EAAS,IACTI,EACI,8BACI,2EAGZ,IACCiF,OAAM,SAAC1H,GACJlC,QAAQC,IAAIiC,GACZoC,GAAS,GACTC,EAAS,EACb,KAEAD,GAAS,GACTC,EAASmF,GAEjB,GA0M4D,EAAGlB,UAAU,uBAAqB,YAG9E,gBAAC,IAAM,CAACqB,IAAKnE,EAAS+C,QAAS,YAzM/CqB,EAAAA,EAAAA,UAAS,uBAyMuD,EAAEpB,MAAO,CAACqB,QAAS,WACzD,IAAT5F,EACG,0BAAQqE,UAAU,QACd,gBAAC,IAAS,CAACwB,QAASxE,EAAiBC,mBAAoBA,EAAoBD,gBAAiBA,KAEpG,OAGV,gBAAC,IAAG,CAACgD,UAAU,kBACb,gBAAC,IAAY,CAAC9C,QAASA,EAASuE,KAAK,YAG3C,gBAAC,IAAc,CAAC5F,MAAOA,EAAOC,SAAUA,EAAUpC,MAAOA,EAAOuC,SAAUA,EAAUC,aAAcA,IAG1G,C","sources":["webpack://gatsby-starter-default/./src/components/validadores.js","webpack://gatsby-starter-default/./src/pages/datos-facturacion.js"],"sourcesContent":["class Validador {\n    static _val = null\n\n    static get instance() {\n    if (Validador._val === null) {\n        Validador._val = new Validador()\n    }\n    return Validador._val\n    }\n    constructor() {\n\n    }\n\n    async ValidadorWhatsApp(data){\n        let nuevaData = 0;\n        let nuevaBoolean = false;\n\n        if(data === undefined || data === \"\"){\n            nuevaData = 0;\n            nuevaBoolean = true;\n        } else {\n            if(data.length === 10){\n                nuevaData = 5;\n                nuevaBoolean = false;\n            } else {\n                nuevaData = 2;\n                nuevaBoolean = true;\n            }\n        }\n\n        let params = {\n            data: nuevaData,\n            boolean: nuevaBoolean,\n        }\n        return params;\n    }\n\n    async ValidadorCorreo(data){\n        let nuevaData = 0;\n        let nuevaBoolean = false;\n        if(data === undefined || data === \"\"){\n            nuevaData = 0;\n            nuevaBoolean = true;\n        } else {\n            let regexEmail = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n            let email = regexEmail.test(data);\n            if(email === true){\n                nuevaData = 5;\n                nuevaBoolean = false;\n            } else {\n                nuevaData = 1;\n                nuevaBoolean = true;\n            }\n        }\n\n        let params = {\n            data: nuevaData,\n            boolean: nuevaBoolean,\n        }\n\n        return params;\n    }\n\n    async ValidadorVIN(data){\n        let nuevaData = 0;\n        let nuevaBoolean = false;\n        console.log(\"Entra validador\")\n        if(data === undefined || data === \"\"){\n            nuevaData = 0;\n            nuevaBoolean = true;\n        } else {\n            if(data.length === 8){\n                nuevaData = 5;\n                nuevaBoolean = false;\n            } else {\n                nuevaData = 3;\n                nuevaBoolean = true;\n            }\n        }\n\n        let params = {\n            data: nuevaData,\n            boolean: nuevaBoolean,\n        }\n        return params;\n    }\n\n    async ValidadorRFC(RFC, Regimen){\n        let nuevaData = 0;\n        let nuevaBooleanRFC = false;\n        let nuevaBooleanRegimen = false;\n\n        if(Regimen === \"Selecciona\"){\n            nuevaData = 8;\n            nuevaBooleanRegimen = true;\n        } else if (Regimen === \"Física\") {\n            nuevaBooleanRegimen = false;\n            if(RFC === \"\" || RFC === undefined){\n                console.log(\"llega aquí vacio\")\n                nuevaData = 0;\n                nuevaBooleanRFC = true;\n            } else {\n                console.log(\"llega aquí tiene valores\")\n                if(RFC.length === 13){\n                    nuevaData = 5;\n                    nuevaBooleanRFC = false;\n                } else {\n                    nuevaData = 9;\n                    nuevaBooleanRFC = true;\n                }\n            }\n        } else if (Regimen === \"Moral\") {\n            nuevaBooleanRegimen = false;\n            if(RFC === \"\" || RFC === undefined){\n                nuevaData = 0;\n                nuevaBooleanRFC = true;\n            } else {\n                if(RFC.length === 12){\n                    nuevaData = 5;\n                    nuevaBooleanRFC = false;\n                } else {\n                    nuevaData = 9;\n                    nuevaBooleanRFC = true;\n                }\n            }\n        }\n\n        let params = {\n            data: nuevaData,\n            booleanRFC: nuevaBooleanRFC,\n            booleanRegimen: nuevaBooleanRegimen\n        }\n\n        return params;\n\n    }\n\n    async ValidadorGenero(data){\n        //console.log(\"Estamos en el ValidadorGenero: \", data);\n        let nuevaData = 0;\n        let nuevaBoolean = false;\n\n        if(data === \"Selecciona\"){\n            nuevaData = 8;\n            nuevaBoolean = true;\n        } else {\n            nuevaData = 5;\n            nuevaBoolean = false;\n        }\n\n        let params = {\n            data: nuevaData,\n            boolean: nuevaBoolean\n        }\n        return params;\n    }\n\n    async ValidadorNombre(data){\n        let nuevaData = 0;\n        let nuevaBoolean = false;\n\n        if(data === \"\" || data === undefined){\n            nuevaData = 0;\n            nuevaBoolean = true;\n        } else {\n            nuevaData = 5;\n            nuevaBoolean = false;\n        }\n\n        let params ={\n            data: nuevaData,\n            boolean: nuevaBoolean,\n        }\n        return params\n    }\n\n    // Validador de campos tipo formularios\n    async ValidadorCamposFacturacion(data){\n        let nuevaData = 0;\n        //console.log(\"Recibo lo siguiente aquí\", data);\n\n        if(data.Calle === \"\" || data.Celular === \"\" || data.Colonia === \"\" || data.Correo === \"\" || data.Nombre === \"\" || data.RFC === \"\" || data.Telefono === \"\"|| data.CodigoP === \"\"){\n            nuevaData = 0;\n        } else {\n            nuevaData = 5;\n        }\n\n        return nuevaData;\n    }\n\n    async ValidadorCamposNuevoUsuario(data){\n        let jijiData = 5;\n\n        let ValNombre = await this.ValidadorNombre(data.Nombre);\n        let ValCorreo = await this.ValidadorCorreo(data.Correo);\n        let VaCelular = await this.ValidadorWhatsApp(data.Celular);\n        let VaRFC = await this.ValidadorRFC(data.RFC, data.Regimen);\n        let VaGenero = await this.ValidadorGenero(data.Genero);\n\n        let ValCalle = await this.ValidadorNombre(data.Calle);\n        let ValNumero = await this.ValidadorNombre(data.Numero);\n        let ValColonia = await this.ValidadorNombre(data.Colonia);\n        let ValCPostal = await this.ValidadorNombre(data.CPostal);\n\n        if(ValNombre.data === 0 || ValCorreo.data === 0 || VaCelular.data === 0 || VaRFC.data === 0 || ValCalle.data === 0 || ValNumero.data === 0 || ValColonia.data === 0 || ValCPostal.data === 0){\n            jijiData = 0;\n        } else {\n            if(ValCorreo.data === 1){ jijiData = ValCorreo.data; } \n            else if(VaCelular.data === 2) { jijiData = VaCelular.data; }\n            else if(VaRFC.data === 8 || VaRFC.data === 9) { jijiData = VaRFC.data; }\n            else if(VaGenero.data === 8) { jijiData = VaGenero.data; }\n        } \n\n        let nuevaData = {\n            error: jijiData,\n            nombre: ValNombre,\n            correo: ValCorreo,\n            celular: VaCelular,\n            rfc: VaRFC,\n            genero: VaGenero,\n            calle: ValCalle,\n            numero: ValNumero,\n            colonia: ValColonia,\n            cpostal: ValCPostal\n        };\n\n        return nuevaData;\n    }\n\n    async ValidadorCamposDatosAutos(data){\n        //console.log(\"Tengo lo siguiente jiji, \", data);\n        let ErrorJiji = 0;\n\n        let valColor = await this.ValidadorNombre(data.Color);\n        let valAnio = await this.ValidadorNombre(data.Anio);\n        let valVIN = await this.ValidadorNombre(data.VINDatos);\n        let valPlacas = await this.ValidadorNombre(data.Placas);\n        let valKilometraje = await this.ValidadorNombre(data.Kilometraje);\n\n        if(valColor.data === 0 || valAnio.data === 0 || valVIN.data === 0 || valPlacas.data === 0 || valKilometraje.data === 0) {\n            ErrorJiji = 0;\n        } else {\n            ErrorJiji = 5;\n        }\n\n        let params = {\n            error: ErrorJiji,\n            color: valColor,\n            anio: valAnio,\n            vin: valVIN,\n            placas: valPlacas,\n            kilometraje: valKilometraje,\n        }\n\n        return params;\n\n    }\n\n}\n\nmodule.exports = Validador.instance","import React, { useState, useRef, useEffect } from \"react\";\nimport { Col, Row, Container, Button, Form } from \"react-bootstrap\";\nimport { navigate } from \"gatsby\";\n\nimport Layout from \"../components/layout.js\";\nimport Seo from \"../components/seo\";\nimport Keyboards from \"../components/Keyboards.js\";\nimport \"../components/pages-css/sCita.css\";\nimport VideoSeccion from \"../components/videoSeccion.js\";\nimport ModalEmergente from \"../components/ModalEmergente.js\";\nimport val from \"../components/validadores\";\nimport api from \"../components/actions/riveroapi\";\nimport Timer from \"../components/timer.js\";\n\nexport default function DatosFacturacion() {\n  const [show, setShow] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [error, setError] = useState(0);\n  const [errorInput, setErrorInput] = useState(false);\n  const [click, setClick] = useState(false);\n  const [mensajeModal, setMensajeModal] = useState(\"\");\n\n  const [entidad, setEntidad] = useState({\n    estado: \"\",\n    municipio: \"\"\n  })\n\n  const [inputEsMuni, setInputEsMuni] = useState({\n    estados: {},\n    ciudades: {}\n  })\n\n  const [optionsKeyboard, setOptionsKeyboard] = useState({\n    inpName: \"\",\n    layoName: \"default\",\n    name: \"\",\n    value: {\n        Nombre: \"\",\n        RFC: \"\",\n        Correo: \"\",\n        Celular: \"\",\n        Telefono: \"\", \n        Calle: \"\",\n        Numero: \"\",\n        Colonia: \"\",\n        CodigoP: \"\"\n    }\n  })\n\n  const refForm = useRef();\n\n  useEffect(() => {\n\n    if (typeof window !== 'undefined') {\n        //console.log('we are running on the client');\n\n        var datos = JSON.parse(localStorage.getItem(\"informacion\"));\n        var estado = datos.direccionCliente.state;\n        var municipio = datos.direccionCliente.city;\n\n        const paramLocal = {\n            ParamEstado: estado,\n            ParamMuni: municipio\n        }\n\n        Estados(paramLocal);\n\n        var direccionSplit = datos.direccionCliente.street.split(/[\",\"]+/);\n        var direccionReplace = direccionSplit[0].replace(/[0-9]/g, '');\n\n        var newName = datos.datosCliente.fullName.replace(/,/g, \" \");\n\n        //console.log(datos);\n\n        //8110808942\n        setOptionsKeyboard({\n            ...optionsKeyboard,\n            value: {\n                Nombre: newName,\n                RFC: datos.datosCliente.rfc,\n                Correo: datos.contactoCliente.email,\n                Celular: datos.contactoCliente.mobile,\n                Telefono: datos.contactoCliente.phone, \n                Calle: direccionReplace,\n                Numero: datos.direccionCliente.number,\n                Colonia: datos.direccionCliente.street2,\n                CodigoP: datos.direccionCliente.postalCode\n            }\n        })\n\n\n    } else {\n        //console.log('we are running on the server');\n    }\n    \n  }, [])\n\n  function Estados(data){\n    var miCadena = data.ParamEstado?.normalize(\"NFD\").replace(/[^a-zA-Z0-9 ]/g, '');\n    var datos = miCadena || \"nuevo leon\";\n    var minusculas = datos.toLowerCase();\n\n    var cadenaMuni = data.ParamMuni.normalize(\"NFD\").replace(/[^a-zA-Z0-9 ]/g, '');\n    var minusculaMuni = cadenaMuni.toLowerCase();\n\n    api.getMunicipios(minusculas).then((respEst) => {\n\n        //console.log(\"Tengo los estados: \", respEst);\n\n        const mapEstado = respEst.estados.map((obj) => {\n            var minusEstados = obj.toLowerCase();\n            var normaEstados = minusEstados?.normalize(\"NFD\").replace(/[^a-zA-Z0-9 ]/g, '');\n\n            if(normaEstados === minusculas){\n                return obj;\n            } else {\n            }\n        });\n\n        var filterEstado = mapEstado.filter(function(x) {\n            return x !== undefined;\n        });\n\n        const mapMunicipio = respEst.ciudades.map((obj) => {\n            var minusMun = obj.toLowerCase();\n            var normaMuni = minusMun?.normalize(\"NFD\").replace(/[^a-zA-Z0-9 ]/g, '');\n\n            if(normaMuni === minusculaMuni){\n                return obj;\n            } else {\n            }\n        \n        })\n\n        var filterMunicipio = mapMunicipio.filter(function(x) {\n            return x !== undefined;\n        });\n\n        setEntidad({\n            ...entidad,\n            estado: filterEstado[0],\n            municipio: filterMunicipio[0]\n        })\n\n        setInputEsMuni({\n            ...inputEsMuni,\n            estados: respEst.estados,\n            ciudades: respEst.ciudades\n        });\n    })\n  }\n\n  function guardarCambios(){\n\n    var params = {\n        Nombre: optionsKeyboard.value.Nombre,\n        RFC: optionsKeyboard.value.RFC,\n        Correo: optionsKeyboard.value.Correo,\n        Celular: optionsKeyboard.value.Celular,\n        Telefono: optionsKeyboard.value.Telefono,\n        Calle: optionsKeyboard.value.Calle,\n        Numero: optionsKeyboard.value.Numero,\n        Colonia: optionsKeyboard.value.Colonia,\n        CodigoP: optionsKeyboard.value.CodigoP,\n        Estado: entidad.estado,\n        Municipio: entidad.municipio\n    }\n    \n    val.ValidadorCamposFacturacion(params).then((resp) => {\n        //console.log(\"Tengo la respuesta: \", resp)\n        if(resp === 5){\n            api.getEditarDatos(params)\n            .then((respApi) => {\n                setModal(true);\n                setError(14);\n                setMensajeModal(\n                    <center>\n                        <div>✅ Los cambios se han guardado correctamente</div>\n                    </center>\n                )\n            })\n            .catch((error) => {\n                console.log(error);\n                setModal(true);\n                setError(7);\n            });\n          } else {\n            setModal(true);\n            setError(resp);\n          }\n    });\n  }\n\n  function continuar(){\n    navigate(\"/servicio-a-realizar\")\n  }\n\n  return (\n    <Layout backUrl={\"/datos-actuales\"}>\n      <Seo title=\"Auto servicio\" />\n        <Container className=\"container-sin-cita\" onClick={() => {setClick(true)}}>\n        {/*<Timer click={click} setClick={setClick} setError={setError} setModal={setModal}/>*/}\n            <Row className=\"row-cita-arriba\">\n                <div className=\"container-cita\">\n                    <Row>\n                        <Col className=\"titulo-cita\"><h1 className=\"titulo-h1\" style={{marginTop: '0.8rem', marginBottom: 0}}>Datos de Facturación</h1></Col>\n                    </Row>\n                    <Row>\n                        <Col className=\"titulo-cita\"><p className=\"texto-gris\" style={{marginBottom: 0, marginTop: 0}}>Puedes editar tus datos actuales o simplemente omitir este paso.</p></Col>\n                    </Row>\n                    <Row className=\"titulo-cita\">\n                        <h3 className=\"titulo-h1\" style={{marginTop: '0.5rem', marginBottom: '0.5rem'}}>Cliente</h3>\n                        <Container>\n                            <Row>\n                                <Col lg={3}>\n                                    Nombre completo:\n                                    <input\n                                        autoComplete=\"off\"\n                                        type=\"text\"\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\n                                        className=\"form-control\"\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"default\"}) }}\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"Nombre\"})}\n                                        value={optionsKeyboard.value.Nombre || \"\"}\n                                    />\n                                </Col>\n                                <Col lg={2}>\n                                    RFC:\n                                    <input\n                                        autoComplete=\"off\"\n                                        type=\"text\"\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\n                                        className=\"form-control\"\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"vin\"}) }}\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"RFC\"})}\n                                        value={optionsKeyboard.value.RFC || \"\"}\n                                    />\n                                </Col>\n                                <Col lg={3}>\n                                    Correo electrónico:\n                                    <input\n                                        autoComplete=\"off\"\n                                        type=\"text\"\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\n                                        className=\"form-control\"\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"default\"}) }}\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"Correo\"})}\n                                        value={optionsKeyboard.value.Correo || \"\"}\n                                    />\n                                </Col>\n                                <Col lg={2}>\n                                    Celular:\n                                    <input\n                                        autoComplete=\"off\"\n                                        type=\"text\"\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\n                                        className=\"form-control\"\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"phone\"}) }}\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"Celular\"})}\n                                        value={optionsKeyboard.value.Celular || \"\"}\n                                    />\n                                </Col>\n                                <Col lg={2}>\n                                    Teléfono:\n                                    <input\n                                        autoComplete=\"off\"\n                                        type=\"text\"\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\n                                        className=\"form-control\"\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"phone\"}) }}\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"Telefono\"})}\n                                        value={optionsKeyboard.value.Telefono || \"\"}\n                                    />\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Row>\n                    <Row className=\"titulo-cita\">\n                        <h3 className=\"titulo-h1\" style={{marginTop: '0.5rem', marginBottom: '0.5rem'}}>Domicilio</h3>\n                        <Container>\n                            <Row>\n                                <Col lg={2}>\n                                    Calle:\n                                    <input\n                                        autoComplete=\"off\"\n                                        type=\"text\"\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\n                                        className=\"form-control\"\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"default\"}) }}\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"Calle\"})}\n                                        value={optionsKeyboard.value.Calle || \"\"}\n                                    />\n                                </Col>\n                                <Col lg={2}>\n                                    Número:\n                                    <input\n                                        autoComplete=\"off\"\n                                        type=\"text\"\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\n                                        className=\"form-control\"\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"phone\"}) }}\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"Numero\"})}\n                                        value={optionsKeyboard.value.Numero || \"\"}\n                                    />\n                                </Col>\n                                <Col lg={2}>\n                                    Colonia:\n                                    <input\n                                        autoComplete=\"off\"\n                                        type=\"text\"\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\n                                        className=\"form-control\"\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"default\"}) }}\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"Colonia\"})}\n                                        value={optionsKeyboard.value.Colonia || \"\"}\n                                    />\n                                </Col>\n                                <Col lg={2}>\n                                    <div style={{paddingBottom:10}}>Estado: </div>\n                                    <Form.Select\n                                        aria-label=\"Default select example\"\n                                        id=\"inputContacto\"\n                                        className=\"form-control\"\n                                        onChange={(e) => {\n                                            const paramLocal = {\n                                                ParamEstado: e.target.value,\n                                                ParamMuni: \"\"\n                                            }\n\n                                            Estados(paramLocal);\n                                        }}\n                                        value={entidad.estado}\n                                    >\n                                        <option value=\"Selecciona\">Seleccionar</option>\n                                        {inputEsMuni && inputEsMuni.estados && inputEsMuni.estados.length > 0 ? (\n                                            inputEsMuni.estados.map((obj, i) => {\n                                                ////console.log(\"Tengo: \", obj);\n                                                return(\n                                                    <>\n                                                        <option value={obj}>{obj}</option>\n                                                    </>\n                                                )\n                                            })\n                                        ) : null\n                                        }\n                                    </Form.Select>\n                                </Col>\n                                <Col lg={2}>\n                                    <div style={{paddingBottom:10}}>Municipio: </div>\n                                    <Form.Select\n                                        aria-label=\"Default select example\"\n                                        id=\"inputContacto\"\n                                        className=\"form-control\"\n                                        onChange={(e) => {\n                                            setEntidad({\n                                                ...entidad,\n                                                municipio: e.target.value\n                                            })\n                                        }}\n                                        value={entidad.municipio}\n                                    >\n                                        <option value=\"Selecciona\">Seleccionar</option>\n                                        {inputEsMuni && inputEsMuni.ciudades && inputEsMuni.ciudades.length > 0 ? (\n                                            inputEsMuni.ciudades.map((obj, i) => {\n                                                //console.log(\"Tengo: \", obj);\n                                                return(\n                                                    <>\n                                                        <option value={obj}>{obj}</option>\n                                                    </>\n                                                )\n                                            })\n                                        ) : null\n                                        }\n                                    </Form.Select>\n                                </Col>\n                                <Col lg={2}>\n                                    Código postal:\n                                    <input\n                                        autoComplete=\"off\"\n                                        type=\"text\"\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\n                                        className=\"form-control\"\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"phone\"}) }}\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"CodigoP\"})}\n                                        value={optionsKeyboard.value.CodigoP || \"\"}\n                                    />\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Row>\n\n                    <Row className=\"titulo-cita p-3\">\n                        <Button onClick={() => {guardarCambios()}} className=\"btn-celeste-guardar\">Guardar</Button>\n                    </Row>\n\n                    <Button ref={refForm} onClick={() => continuar()} style={{display: 'none'}}></Button>\n                    {show === true ? \n                        <center className=\"pt-2\">\n                            <Keyboards options={optionsKeyboard} setOptionsKeyboard={setOptionsKeyboard} optionsKeyboard={optionsKeyboard}/>\n                        </center>\n                    : null }\n                </div>\n            </Row>\n            <Row className=\"row-cita-abajo\">\n              <VideoSeccion refForm={refForm} none=\"tiene\"/>\n            </Row>\n        </Container>\n        <ModalEmergente modal={modal} setModal={setModal} error={error} setClick={setClick} mensajeModal={mensajeModal}/>\n    </Layout>\n  )\n}"],"names":["Validador","ValidadorWhatsApp","data","nuevaData","nuevaBoolean","undefined","length","params","boolean","ValidadorCorreo","test","ValidadorVIN","console","log","ValidadorRFC","RFC","Regimen","nuevaBooleanRFC","nuevaBooleanRegimen","booleanRFC","booleanRegimen","ValidadorGenero","ValidadorNombre","ValidadorCamposFacturacion","Calle","Celular","Colonia","Correo","Nombre","Telefono","CodigoP","ValidadorCamposNuevoUsuario","jijiData","this","ValNombre","ValCorreo","VaCelular","VaRFC","Genero","VaGenero","ValCalle","Numero","ValNumero","ValColonia","CPostal","ValCPostal","error","nombre","correo","celular","rfc","genero","calle","numero","colonia","cpostal","ValidadorCamposDatosAutos","ErrorJiji","Color","valColor","Anio","valAnio","VINDatos","valVIN","Placas","valPlacas","Kilometraje","valKilometraje","color","anio","vin","placas","kilometraje","_val","module","exports","instance","DatosFacturacion","useState","show","setShow","modal","setModal","setError","errorInput","setClick","mensajeModal","setMensajeModal","estado","municipio","entidad","setEntidad","estados","ciudades","inputEsMuni","setInputEsMuni","inpName","layoName","name","value","optionsKeyboard","setOptionsKeyboard","refForm","useRef","Estados","minusculas","ParamEstado","normalize","replace","toLowerCase","minusculaMuni","ParamMuni","api","then","respEst","filterEstado","map","obj","minusEstados","filter","x","filterMunicipio","minusMun","useEffect","window","datos","JSON","parse","localStorage","getItem","direccionCliente","state","city","direccionReplace","street","split","newName","datosCliente","fullName","contactoCliente","email","mobile","phone","number","street2","postalCode","backUrl","title","className","onClick","style","marginTop","marginBottom","lg","autoComplete","type","id","onFocus","paddingBottom","onChange","e","target","i","Estado","Municipio","val","resp","respApi","catch","ref","navigate","display","options","none"],"sourceRoot":""}