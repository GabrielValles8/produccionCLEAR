{"version":3,"file":"component---src-pages-nuevo-usuario-js-34f74f1294fd7164bad1.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/validadores.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://gatsby-starter-default/./src/pages/nuevo-usuario.js"],"sourcesContent":["class Validador {\n    static _val = null\n\n    static get instance() {\n    if (Validador._val === null) {\n        Validador._val = new Validador()\n    }\n    return Validador._val\n    }\n    constructor() {\n\n    }\n\n    async ValidadorWhatsApp(data){\n        let nuevaData = 0;\n        let nuevaBoolean = false;\n\n        if(data === undefined || data === \"\"){\n            nuevaData = 0;\n            nuevaBoolean = true;\n        } else {\n            if(data.length === 10){\n                nuevaData = 5;\n                nuevaBoolean = false;\n            } else {\n                nuevaData = 2;\n                nuevaBoolean = true;\n            }\n        }\n\n        let params = {\n            data: nuevaData,\n            boolean: nuevaBoolean,\n        }\n        return params;\n    }\n\n    async ValidadorCorreo(data){\n        let nuevaData = 0;\n        let nuevaBoolean = false;\n        if(data === undefined || data === \"\"){\n            nuevaData = 0;\n            nuevaBoolean = true;\n        } else {\n            let regexEmail = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n            let email = regexEmail.test(data);\n            if(email === true){\n                nuevaData = 5;\n                nuevaBoolean = false;\n            } else {\n                nuevaData = 1;\n                nuevaBoolean = true;\n            }\n        }\n\n        let params = {\n            data: nuevaData,\n            boolean: nuevaBoolean,\n        }\n\n        return params;\n    }\n\n    async ValidadorVIN(data){\n        let nuevaData = 0;\n        let nuevaBoolean = false;\n        console.log(\"Entra validador\")\n        if(data === undefined || data === \"\"){\n            nuevaData = 0;\n            nuevaBoolean = true;\n        } else {\n            if(data.length === 8){\n                nuevaData = 5;\n                nuevaBoolean = false;\n            } else {\n                nuevaData = 3;\n                nuevaBoolean = true;\n            }\n        }\n\n        let params = {\n            data: nuevaData,\n            boolean: nuevaBoolean,\n        }\n        return params;\n    }\n\n    async ValidadorRFC(RFC, Regimen){\n        let nuevaData = 0;\n        let nuevaBooleanRFC = false;\n        let nuevaBooleanRegimen = false;\n\n        if(Regimen === \"Selecciona\"){\n            nuevaData = 8;\n            nuevaBooleanRegimen = true;\n        } else if (Regimen === \"Física\") {\n            nuevaBooleanRegimen = false;\n            if(RFC === \"\" || RFC === undefined){\n                console.log(\"llega aquí vacio\")\n                nuevaData = 0;\n                nuevaBooleanRFC = true;\n            } else {\n                console.log(\"llega aquí tiene valores\")\n                if(RFC.length === 13){\n                    nuevaData = 5;\n                    nuevaBooleanRFC = false;\n                } else {\n                    nuevaData = 9;\n                    nuevaBooleanRFC = true;\n                }\n            }\n        } else if (Regimen === \"Moral\") {\n            nuevaBooleanRegimen = false;\n            if(RFC === \"\" || RFC === undefined){\n                nuevaData = 0;\n                nuevaBooleanRFC = true;\n            } else {\n                if(RFC.length === 12){\n                    nuevaData = 5;\n                    nuevaBooleanRFC = false;\n                } else {\n                    nuevaData = 9;\n                    nuevaBooleanRFC = true;\n                }\n            }\n        }\n\n        let params = {\n            data: nuevaData,\n            booleanRFC: nuevaBooleanRFC,\n            booleanRegimen: nuevaBooleanRegimen\n        }\n\n        return params;\n\n    }\n\n    async ValidadorGenero(data){\n        //console.log(\"Estamos en el ValidadorGenero: \", data);\n        let nuevaData = 0;\n        let nuevaBoolean = false;\n\n        if(data === \"Selecciona\"){\n            nuevaData = 8;\n            nuevaBoolean = true;\n        } else {\n            nuevaData = 5;\n            nuevaBoolean = false;\n        }\n\n        let params = {\n            data: nuevaData,\n            boolean: nuevaBoolean\n        }\n        return params;\n    }\n\n    async ValidadorNombre(data){\n        let nuevaData = 0;\n        let nuevaBoolean = false;\n\n        if(data === \"\" || data === undefined){\n            nuevaData = 0;\n            nuevaBoolean = true;\n        } else {\n            nuevaData = 5;\n            nuevaBoolean = false;\n        }\n\n        let params ={\n            data: nuevaData,\n            boolean: nuevaBoolean,\n        }\n        return params\n    }\n\n    // Validador de campos tipo formularios\n    async ValidadorCamposFacturacion(data){\n        let nuevaData = 0;\n        //console.log(\"Recibo lo siguiente aquí\", data);\n\n        if(data.Calle === \"\" || data.Celular === \"\" || data.Colonia === \"\" || data.Correo === \"\" || data.Nombre === \"\" || data.RFC === \"\" || data.Telefono === \"\"|| data.CodigoP === \"\"){\n            nuevaData = 0;\n        } else {\n            nuevaData = 5;\n        }\n\n        return nuevaData;\n    }\n\n    async ValidadorCamposNuevoUsuario(data){\n        let jijiData = 5;\n\n        let ValNombre = await this.ValidadorNombre(data.Nombre);\n        let ValCorreo = await this.ValidadorCorreo(data.Correo);\n        let VaCelular = await this.ValidadorWhatsApp(data.Celular);\n        let VaRFC = await this.ValidadorRFC(data.RFC, data.Regimen);\n        let VaGenero = await this.ValidadorGenero(data.Genero);\n\n        let ValCalle = await this.ValidadorNombre(data.Calle);\n        let ValNumero = await this.ValidadorNombre(data.Numero);\n        let ValColonia = await this.ValidadorNombre(data.Colonia);\n        let ValCPostal = await this.ValidadorNombre(data.CPostal);\n\n        if(ValNombre.data === 0 || ValCorreo.data === 0 || VaCelular.data === 0 || VaRFC.data === 0 || ValCalle.data === 0 || ValNumero.data === 0 || ValColonia.data === 0 || ValCPostal.data === 0){\n            jijiData = 0;\n        } else {\n            if(ValCorreo.data === 1){ jijiData = ValCorreo.data; } \n            else if(VaCelular.data === 2) { jijiData = VaCelular.data; }\n            else if(VaRFC.data === 8 || VaRFC.data === 9) { jijiData = VaRFC.data; }\n            else if(VaGenero.data === 8) { jijiData = VaGenero.data; }\n        } \n\n        let nuevaData = {\n            error: jijiData,\n            nombre: ValNombre,\n            correo: ValCorreo,\n            celular: VaCelular,\n            rfc: VaRFC,\n            genero: VaGenero,\n            calle: ValCalle,\n            numero: ValNumero,\n            colonia: ValColonia,\n            cpostal: ValCPostal\n        };\n\n        return nuevaData;\n    }\n\n    async ValidadorCamposDatosAutos(data){\n        //console.log(\"Tengo lo siguiente jiji, \", data);\n        let ErrorJiji = 0;\n\n        let valColor = await this.ValidadorNombre(data.Color);\n        let valAnio = await this.ValidadorNombre(data.Anio);\n        let valVIN = await this.ValidadorNombre(data.VINDatos);\n        let valPlacas = await this.ValidadorNombre(data.Placas);\n        let valKilometraje = await this.ValidadorNombre(data.Kilometraje);\n\n        if(valColor.data === 0 || valAnio.data === 0 || valVIN.data === 0 || valPlacas.data === 0 || valKilometraje.data === 0) {\n            ErrorJiji = 0;\n        } else {\n            ErrorJiji = 5;\n        }\n\n        let params = {\n            error: ErrorJiji,\n            color: valColor,\n            anio: valAnio,\n            vin: valVIN,\n            placas: valPlacas,\n            kilometraje: valKilometraje,\n        }\n\n        return params;\n\n    }\n\n}\n\nmodule.exports = Validador.instance","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { useState, useRef, useEffect } from \"react\";\nimport { Col, Row, Container, Button, Form } from \"react-bootstrap\";\nimport { navigate } from \"gatsby\";\n\nimport Layout from \"../components/layout.js\";\nimport val from \"../components/validadores\";\nimport Seo from \"../components/seo\";\nimport Keyboards from \"../components/Keyboards.js\";\nimport \"../components/pages-css/sCita.css\";\nimport VideoSeccion from \"../components/videoSeccion.js\";\nimport ModalEmergente from \"../components/ModalEmergente.js\";\nimport Timer from \"../components/timer.js\";\nimport api from \"../components/actions/riveroapi\";\n\nexport default function NuevoUsuario(){\n\n    const [show, setShow] = useState(false);\n    const [modal, setModal] = useState(false);\n    const [error, setError] = useState(0);\n    const [errorInput, setErrorInput] = useState(false);\n    const [formInputError, setFormInputError] = useState({\n        Nombreform: false,\n        Correoform: false,\n        Celularform: false,\n        Regimenform: false,\n        RFCform: false,\n        Fnacimientoform: false, \n        Generoform: false,\n        Calleform: false,\n        Numeroform: false,\n        Coloniaform: false,\n        CPostalform: false,\n    })\n    const [click, setClick] = useState(false);\n  \n    const [optionsKeyboard, setOptionsKeyboard] = useState({\n      inpName: \"\",\n      layoName: \"default\",\n      name: \"\",\n      value: {\n        NombreNuevo: undefined,\n        CorreoNuevo: undefined,\n        RFCNuevo: undefined,\n        CelularNuevo: undefined,\n        TelefonoNuevo: undefined,\n        fNacimiento: undefined,\n        ColoniaNuevo: undefined,\n        NumeroNuevo: undefined,\n        CalleNuevo: undefined,\n        CodigoPNuevo: undefined,\n      }\n    })\n\n    const [select, setSelect] = useState({\n        regimen: undefined,\n        genero: undefined,\n        fNacimiento: undefined,\n    })\n\n    const [entidad, setEntidad] = useState({\n        estado: \"\",\n        municipio: \"\"\n    })\n\n    const [inputEsMuni, setInputEsMuni] = useState({\n        estados: {},\n        ciudades: {}\n    })\n\n    const refForm = useRef();\n\n    useEffect(() => {\n        if (typeof window !== 'undefined') {\n            console.log('we are running on the client');\n            setOptionsKeyboard({\n                ...optionsKeyboard,\n                value: {\n                    NombreNuevo: localStorage.getItem('NombreNuevo') || \"\",\n                    CorreoNuevo: localStorage.getItem('CorreoNuevo') || \"\",\n                    RFCNuevo: localStorage.getItem('RFCNuevo') || \"\",\n                    CelularNuevo: localStorage.getItem('CelularNuevo') || \"\",\n                    TelefonoNuevo: localStorage.getItem('TelefonoNuevo') || \"\",\n                    fNacimiento: localStorage.getItem('fNacimiento') || \"\",\n                    ColoniaNuevo: localStorage.getItem('ColoniaNuevo') || \"\",\n                    NumeroNuevo: localStorage.getItem('NumeroNuevo') || \"\",\n                    CalleNuevo: localStorage.getItem('CalleNuevo') || \"\",\n                    CodigoPNuevo: localStorage.getItem('CodigoPNuevo') || \"\"\n                }\n            })\n            setSelect({\n                ...select,\n                regimen: localStorage.getItem('regimen') || \"\",\n                genero: localStorage.getItem('genero') || \"\",\n                fNacimiento: localStorage.getItem('fNacimiento') || \"\",\n            })\n            const paramLocal = {\n                ParamEstado: \"Nuevo León\",\n                ParamMuni: \"\"\n            }\n            Estados(paramLocal);\n        } else {\n            console.log('we are running on the server');\n        }\n    }, [])\n\n    function Estados(data){\n\n        console.log(\"Recibo: \", data);\n\n        var miCadena = data.ParamEstado?.normalize(\"NFD\").replace(/[^a-zA-Z0-9 ]/g, '');\n        var datos = miCadena || \"nuevo leon\";\n        var minusculas = datos.toLowerCase();\n    \n        var cadenaMuni = data.ParamMuni.normalize(\"NFD\").replace(/[^a-zA-Z0-9 ]/g, '');\n        var minusculaMuni = cadenaMuni.toLowerCase();\n    \n        api.getMunicipios(minusculas).then((respEst) => {\n    \n            console.log(\"Tengo los estados: \", respEst);\n\n            const mapEstado = respEst.estados.map((obj) => {\n                var minusEstados = obj.toLowerCase();\n                var normaEstados = minusEstados?.normalize(\"NFD\").replace(/[^a-zA-Z0-9 ]/g, '');\n    \n                if(normaEstados === minusculas){\n                    return obj;\n                } else {\n                }\n            });\n    \n            var filterEstado = mapEstado.filter(function(x) {\n                return x !== undefined;\n            });\n\n            const mapMunicipio = respEst.ciudades.map((obj) => {\n                var minusMun = obj.toLowerCase();\n                var normaMuni = minusMun?.normalize(\"NFD\").replace(/[^a-zA-Z0-9 ]/g, '');\n    \n                if(normaMuni === minusculaMuni){\n                    return obj;\n                } else {\n                }\n            \n            })\n    \n            var filterMunicipio = mapMunicipio.filter(function(x) {\n                return x !== undefined;\n            });\n\n            setEntidad({\n                ...entidad,\n                estado: filterEstado[0],\n                municipio: filterMunicipio[0]\n            })\n    \n            setInputEsMuni({\n                ...inputEsMuni,\n                estados: respEst.estados,\n                ciudades: respEst.ciudades\n            })\n  \n        })\n    }\n\n    async function continuar(){\n\n        var params = {\n            Nombre: optionsKeyboard.value.NombreNuevo,\n            Correo: optionsKeyboard.value.CorreoNuevo,\n            Regimen: select.regimen,\n            RFC: optionsKeyboard.value.RFCNuevo,\n            Celular: optionsKeyboard.value.CelularNuevo,\n            Telefono: optionsKeyboard.value.TelefonoNuevo,\n            Nacimiento: select.fNacimiento,\n            Genero: select.genero,\n            Colonia: optionsKeyboard.value.ColoniaNuevo,\n            Numero: optionsKeyboard.value.NumeroNuevo,\n            Calle: optionsKeyboard.value.CalleNuevo,\n            CPostal: optionsKeyboard.value.CodigoPNuevo,\n        }\n\n        val.ValidadorCamposNuevoUsuario(params).then((resp) => {\n\n            setFormInputError({\n                ...formInputError,\n                Nombreform: resp.nombre.boolean,\n                Correoform: resp.correo.boolean,\n                Celularform: resp.celular.boolean,\n                Regimenform: resp.rfc.booleanRegimen,\n                RFCform: resp.rfc.booleanRFC,\n                Generoform: resp.genero.boolean,\n                Calleform: resp.calle.boolean,\n                Numeroform: resp.numero.boolean,\n                Coloniaform: resp.colonia.boolean,\n                CPostalform: resp.cpostal.boolean\n            })\n\n            if(resp.error === 0 || resp.error === 1 || resp.error === 2 || resp.error === 8 || resp.error === 9){\n                setError(resp.error);\n                setModal(true);\n            } else if (resp.error === 5) {\n\n                var tel =  optionsKeyboard.value.TelefonoNuevo || \"\";\n\n                const params = {\n                    data: {},\n                    id: 0,\n                    codigo: 0,\n                    datosCliente: {\n                        Nombre: optionsKeyboard.value.NombreNuevo,\n                        RFC: optionsKeyboard.value.RFCNuevo,\n                        DiaNacimiento: select.fNacimiento,\n                    },\n                    direccionCliente: {\n                        Calle: optionsKeyboard.value.CalleNuevo,\n                        Numero: optionsKeyboard.value.NumeroNuevo,\n                        Colonia: optionsKeyboard.value.ColoniaNuevo,\n                        CodigoPostal: optionsKeyboard.value.CodigoPNuevo,\n                        Estado: entidad.estado,\n                        Municipio: entidad.municipio,\n                        Pais: \"MEXICO\"\n                    },\n                    clienteContacto: {\n                        Celular: optionsKeyboard.value.CelularNuevo,\n                        Telefono: tel,\n                        Correo: optionsKeyboard.value.CorreoNuevo,\n                        Preferencia: \"WhatsApp\"\n                    },\n                  }\n                \n                navigate(\"/registrar-vehiculo\");\n                localStorage.setItem(\"RutaNavegacion\", \"nuevo-usuario\");\n                localStorage.setItem(\"informacion\", JSON.stringify(params));\n            }\n        })\n    }\n\n    return(\n        <Layout backUrl={\"/\"}>\n            <Seo title=\"Auto servicio\" />\n            <Container className=\"container-sin-cita\" onClick={() => {setClick(true)}}>\n            {/*<Timer click={click} setClick={setClick} setError={setError} setModal={setModal}/>*/}\n                <Row className=\"row-cita-arriba\">\n                    <form className=\"container-cita\" style={{overflowY: 'scroll', height: '100%'}}>\n                        <Row>\n                            <Col className=\"titulo-cita\"><h1 className=\"titulo-h1\" style={{marginTop: '0.8rem'}}>Datos del usuario</h1></Col>\n                        </Row>\n                        <Row className=\"titulo-cita\">\n                            <h3 className=\"titulo-h1\" style={{marginTop: '0.6rem', marginBottom: '0.6rem'}}>Cliente</h3>\n                            <Container>\n                                <Row>\n                                    <Col lg={4}>\n                                        Nombre completo:\n                                        <input\n                                        autoComplete=\"off\"\n                                        type=\"text\"\n                                        id={formInputError.Nombreform === true ? \"inputContactoError\" : \"inputContacto\"}\n                                        className=\"form-control\"\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"default\"}) }}\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"NombreNuevo\"})}\n                                        value={optionsKeyboard.value.NombreNuevo || \"\"}\n                                        />\n                                    </Col>\n                                    <Col lg={4}>\n                                        Correo electrónico:\n                                        <input\n                                        autoComplete=\"off\"\n                                        type=\"text\"\n                                        id={formInputError.Correoform === true ? \"inputContactoError\" : \"inputContacto\"}\n                                        className=\"form-control\"\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"default\"}) }}\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"CorreoNuevo\"})}\n                                        value={optionsKeyboard.value.CorreoNuevo || \"\"}\n                                    />\n                                    </Col>\n                                    <Col lg={2}>\n                                        <div style={{paddingBottom:10}}>Tipo de regimen: </div>\n                                            <Form.Select\n                                            aria-label=\"Default select example\"\n                                            id={formInputError.Regimenform === true ? \"inputContactoError\" : \"inputContacto\"}\n                                            className=\"form-control\"\n                                            onChange={(e) => {\n                                                console.log(\"Estamos en el select de regimen\", e.target.value)\n                                                setSelect({\n                                                ...select,\n                                                regimen: e.target.value\n                                                });\n                                            }}\n                                            value={select.regimen}\n                                        >\n                                            <option value=\"Selecciona\">Selecciona</option>\n                                            <option value=\"Física\">Física</option>\n                                            <option value=\"Moral\">Moral</option>\n                                        </Form.Select>\n                                    </Col>\n                                    <Col lg={2}>\n                                        RFC:\n                                        <input\n                                        autoComplete=\"off\"\n                                        type=\"text\"\n                                        id={formInputError.RFCform === true ? \"inputContactoError\" : \"inputContacto\"}\n                                        className=\"form-control\"\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"vin\"}) }}\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"RFCNuevo\"})}\n                                        value={optionsKeyboard.value.RFCNuevo || \"\"}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col lg={3}>\n                                        Celular:\n                                        <input\n                                            autoComplete=\"off\"\n                                            type=\"text\"\n                                            id={formInputError.Celularform === true ? \"inputContactoError\" : \"inputContacto\"}\n                                            className=\"form-control\"\n                                            onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"phone\"}) }}\n                                            onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"CelularNuevo\"})}\n                                            value={optionsKeyboard.value.CelularNuevo || \"\"}\n                                        />\n                                    </Col>\n                                    <Col lg={3}>\n                                        Teléfono:\n                                        <input\n                                        autoComplete=\"off\"\n                                        type=\"text\"\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\n                                        className=\"form-control\"\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"phone\"}) }}\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"TelefonoNuevo\"})}\n                                        value={optionsKeyboard.value.TelefonoNuevo || \"\"}\n                                        />\n                                    </Col>\n                                    <Col lg={3}>\n                                        Fecha de nacimiento:\n                                        <input\n                                        autoComplete=\"off\"\n                                        type=\"date\"\n                                        id=\"inputContacto\"\n                                        className=\"form-control\"\n                                        onChange={(e) => {\n                                        //console.log(\"Selecciono la fecha: \", e.target.value)\n                                        setSelect({\n                                            ...select,\n                                            fNacimiento: e.target.value\n                                            })\n                                        }}\n                                        value={select.fNacimiento}\n                                    />\n                                    </Col>\n                                    <Col lg={3}>\n                                        <div style={{paddingBottom:10}}>Genero: </div>\n                                            <Form.Select\n                                            aria-label=\"Default select example\"\n                                            id={formInputError.Generoform === true ? \"inputContactoError\" : \"inputContacto\"}\n                                            className=\"form-control\"\n                                            onChange={(e) => {\n                                            console.log(\"Selecciono la fecha: \", e.target.value)\n                                            setSelect({\n                                            ...select,\n                                            genero: e.target.value\n                                            })\n                                            }}\n                                            value={select.genero}\n                                            >\n                                                <option>Selecciona</option>\n                                                <option value=\"Hombre\">Hombre</option>\n                                                <option value=\"Mujer\">Mujer</option>\n                                            </Form.Select>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        </Row>\n                        <Row className=\"titulo-cita\">\n                            <h3 className=\"titulo-h1\" style={{marginTop: '0.6rem', marginBottom: '0.6rem'}}>Domicilio</h3>\n                            <Container>\n                                <Row>\n                                    <Col lg={4}>\n                                        Calle:\n                                        <input\n                                        autoComplete=\"off\"\n                                        type=\"text\"\n                                        id={formInputError.Calleform === true ? \"inputContactoError\" : \"inputContacto\"}\n                                        className=\"form-control\"\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"default\"}) }}\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"CalleNuevo\"})}\n                                        value={optionsKeyboard.value.CalleNuevo || \"\"}\n                                        />\n                                    </Col>\n                                    <Col lg={4}>\n                                        Número:\n                                        <input\n                                        autoComplete=\"off\"\n                                        type=\"text\"\n                                        id={formInputError.Numeroform === true ? \"inputContactoError\" : \"inputContacto\"}\n                                        className=\"form-control\"\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"phone\"}) }}\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"NumeroNuevo\"})}\n                                        value={optionsKeyboard.value.NumeroNuevo || \"\"}\n                                        />\n                                    </Col>\n                                    <Col lg={4}>\n                                        Colonia:\n                                        <input\n                                        autoComplete=\"off\"\n                                        type=\"text\"\n                                        id={formInputError.Coloniaform === true ? \"inputContactoError\" : \"inputContacto\"}\n                                        className=\"form-control\"\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"default\"}) }}\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"ColoniaNuevo\"})}\n                                        value={optionsKeyboard.value.ColoniaNuevo || \"\"}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col lg={4}>\n                                        <div style={{paddingBottom:10}}>Estado: </div>\n                                        <Form.Select\n                                            aria-label=\"Default select example\"\n                                            id=\"inputContacto\"\n                                            className=\"form-control\"\n                                            onChange={(e) => {\n                                                const paramLocal = {\n                                                    ParamEstado: e.target.value,\n                                                    ParamMuni: \"\"\n                                                }\n\n                                                Estados(paramLocal);\n                                            }}\n                                            value={entidad.estado}\n                                        >\n                                            <option value=\"Selecciona\">Seleccionar</option>\n                                            {inputEsMuni && inputEsMuni.estados && inputEsMuni.estados.length > 0 ? (\n                                                inputEsMuni.estados.map((obj, i) => {\n                                                    //console.log(\"Tengo: \", obj);\n                                                    return(\n                                                        <>\n                                                            <option value={obj}>{obj}</option>\n                                                        </>\n                                                    )\n                                                })\n                                            ) : null\n                                            }\n                                        </Form.Select>\n                                    </Col>\n                                    <Col lg={4}>\n                                        <div style={{paddingBottom:10}}>Municipio: </div>\n                                        <Form.Select\n                                            aria-label=\"Default select example\"\n                                            id=\"inputContacto\"\n                                            className=\"form-control\"\n                                            onChange={(e) => {\n                                                setEntidad({\n                                                    ...entidad,\n                                                    municipio: e.target.value\n                                                })\n                                            }}\n                                            value={entidad.municipio}\n                                        >\n                                            <option value=\"Selecciona\">Seleccionar</option>\n                                            {inputEsMuni && inputEsMuni.ciudades && inputEsMuni.ciudades.length > 0 ? (\n                                                inputEsMuni.ciudades.map((obj, i) => {\n                                                    //console.log(\"Tengo: \", obj);\n                                                    return(\n                                                        <>\n                                                            <option value={obj}>{obj}</option>\n                                                        </>\n                                                    )\n                                                })\n                                            ) : null\n                                            }\n                                        </Form.Select>\n                                    </Col>\n                                    <Col lg={4}>\n                                        Código postal:\n                                        <input\n                                        autoComplete=\"off\"\n                                        type=\"text\"\n                                        id={formInputError.CPostalform === true ? \"inputContactoError\" : \"inputContacto\"}\n                                        className=\"form-control\"\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"phone\"}) }}\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"CodigoPNuevo\"})}\n                                        value={optionsKeyboard.value.CodigoPNuevo || \"\"}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Container>\n                        </Row>\n                        {show === true ?\n                            <center className=\"pt-3\">\n                                <Keyboards options={optionsKeyboard} setOptionsKeyboard={setOptionsKeyboard} optionsKeyboard={optionsKeyboard}/>\n                            </center>\n                        : null }\n                    </form>\n                </Row>\n                <Button ref={refForm} onClick={() => continuar()} style={{display: 'none'}}></Button>\n                <Row className=\"row-cita-abajo\">\n                    <VideoSeccion refForm={refForm} none=\"tiene\"/>\n                </Row>\n            </Container>\n            <ModalEmergente modal={modal} error={error} setModal={setModal} setClick={setClick}/>\n        </Layout>\n    )\n\n}"],"names":["Validador","ValidadorWhatsApp","data","nuevaData","nuevaBoolean","undefined","length","params","boolean","ValidadorCorreo","test","ValidadorVIN","console","log","ValidadorRFC","RFC","Regimen","nuevaBooleanRFC","nuevaBooleanRegimen","booleanRFC","booleanRegimen","ValidadorGenero","ValidadorNombre","ValidadorCamposFacturacion","Calle","Celular","Colonia","Correo","Nombre","Telefono","CodigoP","ValidadorCamposNuevoUsuario","jijiData","this","ValNombre","ValCorreo","VaCelular","VaRFC","Genero","VaGenero","ValCalle","Numero","ValNumero","ValColonia","CPostal","ValCPostal","error","nombre","correo","celular","rfc","genero","calle","numero","colonia","cpostal","ValidadorCamposDatosAutos","ErrorJiji","Color","valColor","Anio","valAnio","VINDatos","valVIN","Placas","valPlacas","Kilometraje","valKilometraje","color","anio","vin","placas","kilometraje","_val","module","exports","instance","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","NuevoUsuario","useState","show","setShow","modal","setModal","setError","errorInput","Nombreform","Correoform","Celularform","Regimenform","RFCform","Fnacimientoform","Generoform","Calleform","Numeroform","Coloniaform","CPostalform","formInputError","setFormInputError","setClick","inpName","layoName","name","NombreNuevo","CorreoNuevo","RFCNuevo","CelularNuevo","TelefonoNuevo","fNacimiento","ColoniaNuevo","NumeroNuevo","CalleNuevo","CodigoPNuevo","optionsKeyboard","setOptionsKeyboard","regimen","select","setSelect","estado","municipio","entidad","setEntidad","estados","ciudades","inputEsMuni","setInputEsMuni","refForm","useRef","Estados","minusculas","ParamEstado","normalize","replace","toLowerCase","minusculaMuni","ParamMuni","api","respEst","filterEstado","map","obj","minusEstados","filter","x","filterMunicipio","minusMun","Nacimiento","val","resp","tel","id","codigo","datosCliente","DiaNacimiento","direccionCliente","CodigoPostal","Estado","Municipio","Pais","clienteContacto","Preferencia","navigate","localStorage","setItem","JSON","stringify","useEffect","window","getItem","backUrl","title","Container","className","onClick","Row","style","overflowY","height","Col","marginTop","marginBottom","lg","autoComplete","type","onFocus","paddingBottom","Form","onChange","e","target","i","Keyboards","options","Button","ref","continuar","display","none","ModalEmergente"],"sourceRoot":""}